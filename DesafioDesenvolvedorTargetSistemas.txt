1) Observe o trecho de código:

int INDICE = 12, SOMA = 0, K = 1;

enquanto K < INDICE faça

{ K = K + 1; SOMA = SOMA + K;}

imprimir(SOMA);


Ao final do processamento, qual será o valor da variável SOMA?
===================================================================
#include <iostream>
using namespace std;
int main()
{
  int INDICE = 12, SOMA = 0, K = 1;
  while (K < INDICE)
  {
  	K = K + 1; 
    SOMA = SOMA + K;
  }
  cout << SOMA;
  return 0;
}

O valor da variável SOMA no final do processamento é 77.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2) Descubra a lógica e complete o próximo elemento:

a) 1, 3, 5, 7, [9]

b) 2, 4, 8, 16, 32, 64, [128]

c) 0, 1, 4, 9, 16, 25, 36, [64]

d) 4, 16, 36, 64, [100]

e) 1, 1, 2, 3, 5, 8, [13]

f) 2,10, 12, 16, 17, 18, 19, [200]
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
3) Dado um vetor que guarda o valor de faturamento diário de uma distribuidora de todos os dias de um ano, faça um programa, na linguagem que desejar, que calcule e retorne:

- O menor valor de faturamento ocorrido em um dia do ano;
- O maior valor de faturamento ocorrido em um dia do ano;
- Número de dias no ano em que o valor de faturamento diário foi superior à média anual.

a) Considerar o vetor já carregado com as informações de valor de faturamento.

b) Podem existir dias sem faturamento, como nos finais de semana e feriados. Estes dias devem ser ignorados no cálculo da média.

c) Utilize o algoritmo mais veloz que puder definir.
======================================================================
#include <iostream>
using namespace std;
int main()
{
  //DECLARANDO VALORES FATURAMENTO PARA TESTES ###########################
  float FATURAMENTO[10] = {5.1, 5.2, 5.3, 0, 10, 15, 0, 5.4, 5.5, 5.6};
  //DECLARANDO VARIÁVEIS #################################################
  float MENOR = 0, MAIOR = 0, MEDIA = 0, DIV = 0;
  int DIAS = 0;
  //CALCULANDO DADOS DE FATURAMENTO ANUAL ################################
  for (float NUN : FATURAMENTO) 
  {
  	if(NUN > 0)
    {
    	MENOR = (MENOR == 0) ? NUN : (MENOR < NUN) ? MENOR : NUN;
        MAIOR = (MAIOR < NUN) ? NUN : MAIOR;
        MEDIA = MEDIA + NUN;
        DIV = DIV + 1;
    }
  }
  MEDIA = MEDIA/DIV;
  for (float DAY : FATURAMENTO) {DIAS = (DAY > MEDIA) ? DIAS + 1 : DIAS;}
  //INFORMANDO DADOS DE FATURAMENTO ANUAL #################################
  cout << "Menor Anual: " << MENOR << endl;
  cout << "Maior Anual: " << MAIOR << endl;
  cout << "Media Anual: " << MEDIA << endl;
  cout << "Dias Acima da Média: " << DIAS; 
  return(0);
}
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
4) Banco de dados

Uma empresa solicitou a você um aplicativo para manutenção de um cadastro de clientes. Após a reunião de definição dos requisitos, as conclusões foram as seguintes:

- Um cliente pode ter um número ilimitado de telefones;
- Cada telefone de cliente tem um tipo, por exemplo: comercial, residencial, celular, etc. O sistema deve permitir cadastrar novos tipos de telefone;
- A princípio, é necessário saber apenas em qual estado brasileiro cada cliente se encontra. O sistema deve permitir cadastrar novos estados;

Você ficou responsável pela parte da estrutura de banco de dados que será usada pelo aplicativo. Assim sendo:

- Proponha um modelo lógico para o banco de dados que vai atender a aplicação. Desenhe as tabelas necessárias, os campos de cada uma e marque com setas os relacionamentos existentes entre as tabelas;
- Aponte os campos que são chave primária (PK) e chave estrangeira (FK);
- Faça uma busca utilizando comando SQL que traga o código, a razão social e o(s) telefone(s) de todos os clientes do estado de São Paulo (código “SP”);
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CREATE TABLE clientes 
( 
    ClientID INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, 
    Razao VARCHAR(30) NOT NULL, 
    Nome VARCHAR(30) NOT NULL, 
    Estado VARCHAR(5)
); 

CREATE TABLE telefones
(
    PhoneID INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Tipo VARCHAR(30) NOT NULL,
    Numero VARCHAR(30) NOT NULL,
    ClientID int,
    FOREIGN KEY (ClientID) REFERENCES clientes(ClientID)
);

SELECT Razao
FROM clientes
WHERE Estado = 'SP'
INNER JOIN telefones
ON clientes.ClientID = telefones.ClientID;
=========================================================================
5) Dois veículos, um carro e um caminhão, saem respectivamente de cidades opostas pela mesma rodovia. O carro, de Ribeirão Preto em direção a Barretos, a uma velocidade constante de 90 km/h, e o caminhão, de Barretos em direção a Ribeirão Preto, a uma velocidade constante de 80 km/h. Quando eles se cruzarem no percurso, qual estará mais próximo da cidade de Ribeirão Preto?

a) Considerar a distância de 125km entre a cidade de Ribeirão Preto <-> Barretos.
b) Considerar 3 pedágios como obstáculo e que o carro leva 5 minutos a mais para passar em cada um deles, pois ele não possui dispositivo de cobrança de pedágio.
c)Explique como chegou no resultado.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
5R) Quando eles se cruzarem no percurso ambos estarão na mesma distância de Ribeirão Preto.
